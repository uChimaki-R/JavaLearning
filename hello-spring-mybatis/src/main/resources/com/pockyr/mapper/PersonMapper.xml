<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace指向mapper的全类名-->
<mapper namespace="com.pockyr.mapper.PersonMapper">
    <!--id指向mapper类中的绑定sql语句的方法-->
    <!--有返回值的sql语句需要指定返回值类型，类型是单个行的类类型-->

    <!--使用set标签还可以自动去除多余的","(如只有第一个条件成立时)-->
    <update id="updatePerson">
        update mybatis_test set name = #{name}, age = #{age}, gender = #{gender}, update_time = #{updateTime} where id = #{id}
    </update>

    <!--注解不能写进sql语句中，不然也会被包含在sql语句里而导致出错-->
    <!--使用where标签可以动态格式化where标签中的sql语句，如去掉多余的and/or等-->
    <!--在where标签内的标签条件都不成立时会自动去掉where标签，正好可以查出所有的数据（注意order by不要写到里面去，不然where肯定会成立而导致语法错误）-->
    <!--使用if标签使得sql语句根据条件动态生成-->
    <select id="selectPersons" resultType="com.pockyr.pojo.Person">
        select *
        from mybatis_test
        <where>
            <if test="nameLike != null">
                name like concat('%', #{nameLike}, '%')
            </if>
            <if test="startAge != null and endAge != null">
                and age between #{startAge} and #{endAge}
            </if>
        </where>
        order by update_time
    </select>
</mapper>
